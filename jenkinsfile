pipeline{
    agent any
    stages{
        stage("git-commit"){
            steps{
                // get code from my github repo
                git 'https://github.com/huyn29/level1_repo.git'
            }
        }
        
         stage("build-api"){
            steps{
                dir ("spring-boot-student-app-api"){
                    // Run maven on a unix agent.
                    sh "mvn package"
                }
            }
        }
        stage("build-client"){
            steps{
                dir ("react-student-management-web-app"){
                    sh "docker build -t huyn29/student-app-client ."
                }
            }
        }

        stage("push-images"){
            steps{
                script{
                    withCredentials([string(credentialsId: 'pwd', variable: 'dockerhub')]){
                    sh 'docker login -u huyn29 -p ${dockerhub}'
                    }
                    sh 'docker push huyn29/student-app-api:0.0.1-SNAPSHOT'
                    sh 'docker push huyn29/student-app-client:latest'
                }
            }
        }
        stage("add repo"){
            steps{
                sh 'helm repo add prometheus-community https://prometheus-community.github.io/helm-charts'
                sh 'helm repo add bitnami https://charts.bitnami.com/bitnami'
                sh 'helm repo ls'
            }
        }
        stage("deploy-app1"){
            steps{
                sh 'helm upgrade app1 helm/ --install'
            }
        }
        stage("install prometheus"){
            steps{
                sh 'helm upgrade prometheus prometheus-community/prometheus --install'
                //sh 'kubectl expose service prometheus-server --type=NodePort --target-port=9090 --name=prometheus-server-np'
                //sh 'minikube service prometheus-server-np'
            }
        }

        stage("install grafana"){
            steps{
                sh 'helm upgrade grafana bitnami/grafana -f huyn29.yaml --install'
                //sh 'kubectl expose service grafana --type=NodePort --target-port=3000 --name=grafana-np'
                //echo "User: admin"
                //echo "Password: $(kubectl get secret grafana-admin --namespace default -o jsonpath="{.data.GF_SECURITY_ADMIN_PASSWORD}" | base64 -d)"
                //sh 'minikube service grafana-np'
            }
        }
    }
}
